import numpy as np

def arg(f,epsilon,dx,x0,acceptable_error):
    while True:
        df = (f(x0+dx) -f(x0))/dx
        if df < acceptable_error:
            return x0
        else:
            x0 = x0 - epsilon * df
            
def f(u):
    return np.power(u,2.0)

if __name__=='__main__':
    epsilon =0.2
    dx = 0.001
    acceptable_error =0.0001
    
    a = arg(f,epsilon,dx,10,acceptable_error)
    print(a)
    
  import numpy as np

def arg(f,epsilon,dx,x0,acceptable_error):    
    for i in range(1,100):
        df = (f(x0+dx) -f(x0))/dx
        x0 = x0 - epsilon * df
        print(df,x0)
        if df < acceptable_error:
            break
    
def f(u):
    return np.power(u,2.0)

if __name__=='__main__':
    epsilon =0.2
    dx = 0.001
    acceptable_error =0.0001
    
    a = arg(f,epsilon,dx,10,acceptable_error)
